<?xml version="1.0"?>
<document>
    <title>WOApplication Task Manual</title>

    <properties>
        <author>Andrei Adamchik, Emily Bache</author>
    </properties>

    <body>
 		<section name="WOApplication Task Manual">
			<h3>Description:</h3>

			<p><code>WOApplication</code> is an Ant task to build WebObjects (5.1 or higher) applications
			from a set of files. It does not enforce any particular project structure
			and can be used to create applications without using the ProjectBuilder tool.
			</p>

			<h3>Parameters:</h3>

			<table border="1" cellpadding="2" cellspacing="0">
				<tr>
					<th valign="top"><b>Attribute</b></th>
					<th valign="top"><b>Description</b></th>
					<th align="center" valign="top"><b>Required</b></th>
				</tr>
				<tr>
					<td valign="top">name</td>
					<td valign="top">Name of the application (without <i>.woa</i> extension).</td>
					<td valign="top" align="center">Yes</td>
				</tr>
				<tr>
					<td valign="top">destDir</td>
					<td valign="top">Destination directory where the application woa should be created.</td>
					<td valign="top" align="center">Yes</td>
				</tr>
                <tr>
					<td valign="top">warDestDir</td>
					<td valign="top">Destination directory where the application war file should be created.
                                     <i>(no war will be created if this parameter is omitted)</i></td>
					<td valign="top" align="center">No</td>
				</tr>
                <tr>
					<td valign="top">webXmlTemplate</td>
					<td valign="top">The file to use as a template when generating <code>web.xml</code></td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">stdFrameworks</td>
					<td valign="top">If set to <i>true</i>, a set of standard frameworks will be 
					associated with the deployed application (default is <i>true</i>). "Standard"
					frameworks are: JavaWebObjects, JavaWOExtensions, JavaEOAccess, JavaEOControl,
					JavaFoundation.</td>
					<td valign="top" align="center">No</td>
				</tr>
			</table>

			<h3>Nested elements:</h3>

			<h4>classes</h4>
			<p>The nested <code>classes</code> element specifies a <a
			href="http://jakarta.apache.org/ant/manual/CoreTypes/fileset.html">FileSet</a>.
			All files included in this fileset will
			end up in the <code>Contents/Resources/Java/*.jar</code> file of the application.</p>


			<h4>resources</h4>
			<p>The nested <code>resources</code> element specifies a <a
			href="http://jakarta.apache.org/ant/manual/CoreTypes/fileset.html">FileSet</a>.
			All files included in this fileset will
			end up in the <code>Contents/Resources</code> directory of the application. 
			For the discussion
			of resource localization issues follow <a href="localized.html">this link</a>.</p>

			<h4>wsresources</h4>
			<p>The nested <code>wsresources</code> element specifies a <a
			href="http://jakarta.apache.org/ant/manual/CoreTypes/fileset.html">FileSet</a>.
			All files included in this fileset will
			end up in the <code>Contents/WebServerResources</code> directory of the application.
			For the discussion
			of resource localization issues follow <a href="localized.html">this link</a>.</p>

            <h4>framework</h4>
			<p>The nested <code>framework</code> element specifies the names of the
            WebObjects Frameworks that this application is dependant upon. The jar files from
            these frameworks will be referenced in varios platform-specific depoyment files 
            (such as CLASSPATH.TXT), and specified in the web.xml classpath if an application 
            is deployed as a servlet. Nested "framework" can be used in two forms: standalone and
            <a
			href="http://jakarta.apache.org/ant/manual/CoreTypes/fileset.html">FileSet</a> form. </p>
            
            <h4>Standalone Nested "framework" Parameters:</h4>
            <table border="1" cellpadding="2" cellspacing="0">
				<tr>
					<th valign="top"><b>Attribute</b></th>
					<th valign="top"><b>Description</b></th>
					<th align="center" valign="top"><b>Required</b></th>
				</tr>
				<tr>
					<td valign="top">name</td>
					<td valign="top">Name of the framework (without <i>.framework</i> extension).</td>
					<td valign="top" align="center">Yes</td>
				</tr>
				<tr>
					<td valign="top">base</td>
					<td valign="top">Logical base location of the framework. Allowed values are 
					"home", "wo", "local"</td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">path</td>
					<td valign="top">Path to the framework relative to the "base"
					directory. If ommitted, "Library/Frameworks" is used.</td>
					<td valign="top" align="center">No</td>
				</tr>
			</table>

			<h4>FileSet Nested "framework" Parameters:</h4>
            <table border="1" cellpadding="2" cellspacing="0">
				<tr>
					<th valign="top"><b>Attribute</b></th>
					<th valign="top"><b>Description</b></th>
					<th align="center" valign="top"><b>Required</b></th>
				</tr>
				<tr>
					<td valign="top">base</td>
					<td valign="top">Logical base location of the framework. Allowed values are 
					"home", "wo", "local"</td>
					<td valign="top" align="center">Yes</td>
				</tr>
				<tr>
					<td valign="top">dir</td>
					<td valign="top">Base path to look for the frameworks. Must correspond 
					to the logical path specified in "base" parameter.</td>
					<td valign="top" align="center">Yes</td>
				</tr>
			</table>
			
			<h3>Examples:</h3>

			<p>Create an application "MyApp" with a set of standard frameworks:</p>
<source>
&amp;lt;taskdef name="woapplication" classname="org.objectstyle.woproject.ant.WOApplication"&amp;gt;
     &amp;lt;classpath refid="classpath"/&amp;gt;
&amp;lt;/taskdef&amp;gt;
&amp;lt;woapplication name="MyApp" destDir="${dist}/Applications"&amp;gt;
   &amp;lt;classes dir="${build}/common"&amp;gt;
      &amp;lt;exclude name="*.properties"/&amp;gt;
   &amp;lt;/classes&amp;gt;
   &amp;lt;classes dir="${build}/business"&amp;gt;
       &amp;lt;exclude name="*.properties"/&amp;gt;
   &amp;lt;/classes&amp;gt;
   &amp;lt;resources dir="src/resources"&amp;gt;
       &amp;lt;include name="*.eomodeld/**"/&amp;gt;
       &amp;lt;include name="*.wo/**"/&amp;gt;
   &amp;lt;/resources&amp;gt;
   &amp;lt;wsresources dir="src/frameworks/WSResources"&amp;gt;
       &amp;lt;include name="Images/**"/&amp;gt;
   &amp;lt;/wsresources&amp;gt;
&amp;lt;/woapplication&amp;gt;
</source>

			<p>Create an application "MyApp" with no implicit standard frameworks
			and a custom framework located at HOMEROOT/Library/Frameworks:</p>
<source>
&amp;lt;woapplication name="MyApp" stdFrameworks="false" destDir="${dist}/Applications"&amp;gt;
   ...
   &amp;lt;framework name="CustFramework" base="home"/&amp;gt;
&amp;lt;/woapplication&amp;gt;
</source>

			<p>Create an application "MyApp" with implicit standard frameworks
			and a set of custom frameworks located under HOMEROOT that
			resolves on developer machine to the user home directory:</p>
<source>
&amp;lt;woapplication name="MyApp" stdFrameworks="false" destDir="${dist}/Applications"&amp;gt;
   ...
   &amp;lt;framework base="home" dir="${user.home}"&amp;gt;
      &amp;lt;include name="**/*.framework"/&amp;gt;
   &amp;lt;/framework&amp;gt;
&amp;lt;/woapplication&amp;gt;
</source>
    	</section>
    </body>
</document>
