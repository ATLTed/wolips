<document>
<title>WOGen Task Manual</title>

    <properties>
        <author>Andrei Adamchik</author>
    </properties>
    
<body>
    <section name="WOGen Task Manual">        
			<h3>Description</h3>
			
			<p><code>WOGen</code> is an Ant task that generates and maintains
			EOEnterpriseObjects 
			source files based on EOModel. If "makepairs" is set to "true" (default), this task
			will generate a pair of classes (superclass/subclass) for each EOEntity in the
			EOModel. Superclasses should not be changed manually, since they are always 
			overwritten. Subclasses are never overwritten and may be later customized by the user.
			If "makepairs" is set to "false", a single class will be generated for each EOEntity.
			</p>
			
			<p>WOGen is based on <a href="http://objectstyle.org/cayenne/">Cayenne</a> Cgen class
			generator that is in turn based on <a href="http://jakarta.apache.org/velocity">Jakarta 
			Velocity</a> template engine. Users can easily create new class templates using 
			template language described on Velocity website.			
			</p>

			<h3>Parameters</h3>
			
			<table border="1" cellpadding="2" cellspacing="0">
				<tr>
					<th valign="top"><b>Attribute</b></th>
					<th valign="top"><b>Description</b></th>
					<th align="center" valign="top"><b>Required</b></th>
				</tr>
				<tr>
					<td valign="top">model</td>
					<td valign="top">Directory of EOModel to use as a base for class generation.</td>
					<td valign="top" align="center">Yes</td>
				</tr>
				<tr>
					<td valign="top">destdir</td>
					<td valign="top">Destination directory for Java classes
					<i>(ignoring their package names)</i>.</td>
					<td valign="top" align="center">Yes</td>
				</tr>
				<tr>
					<td valign="top">overwrite</td>
					<td valign="top">If set to "true", will overwrite older versions of
					generated classes. Ignored unless makepairs is set to "false".</td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">makepairs</td>
					<td valign="top">If set to "true", will generate subclass/superclass
					pairs, with all generated code included in superclass
					<i>(default is "true")</i>.</td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">template</td>
					<td valign="top">Location of Velocity template file for Java class
					generation. If ommitted, default template is used.</td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">supertemplate</td>
					<td valign="top">Location of Velocity template file for Java superclass 
					generation. Ignored unless "makepairs" set to "true".
					If ommitted, default template is used.</td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">superpkg</td>
					<td valign="top">Java package name of generated superclasses.
					Ignored unless "makepairs" set to "true". If omitted,
					each superclass will be assigned the same package as subclass.
					<i>Note that having superclass in a different package
					would only make sense when "usepkgpath" is set to "true". 
					Otherwise classes from different packages will end up in the same 
					directory.</i></td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">usepkgpath</td>
					<td valign="top">If set to "true" (default), 
					a directory tree will be generated
					in "destDir" corresponding to the class package structure,
					if set to "false", classes will be generated in "destDir"
					ignoring their package.</td>
					<td valign="top" align="center">No</td>
				</tr>
				<tr>
					<td valign="top">usevaluetype</td>
					<td valign="top">If set to "true" (default is "false"), 
					"valueType" specified in the EOModel will be taken into account
					when generating numeric attributes, resulting in Enterprise Objects with
					attribute types like java.lang.Integer, java.lang.Double, java.lang.Boolean, etc. 
					Otherwise a generic java.lang.Number is used as attribute type.
					</td>
					<td valign="top" align="center">No</td>
				</tr>
			</table>
			
			<h3>Examples</h3>
			<p>1. Generating EOEnterpriseObject
			subclass/superclass pairs from EOModel located in "src/test.eomodeld". All generated
			subclasses and superclasses will be saved in the same directory "src/java/eo" regardless
			of their package names:</p>
<source>
&amp;lt;taskdef name="wogen" classname="org.objectstyle.woproject.ant.WOGenerator"&amp;gt;
     &amp;lt;classpath refid="classpath"/&amp;gt;
&amp;lt;/taskdef&amp;gt;
&amp;lt;wogen map="src/test.eomodeld" destDir="src/java/eo" usepkgpath="false"/&amp;gt;
</source>

			<p>2. Generating EOEnterpriseObject
			subclass/superclass pairs using (and creating if needed) package directories. 
			If an entity "Artist" maps to Java class "org.objectstyle.art.Artist", the following
			files will be generated for this entity: 
			<ul>
				<li><code>src/java/org/objectstyle/art/Artist.java</code></li>
				<li><code>src/java/org/objectstyle/art/_Artist.java</code></li>
			</ul>
			</p>
<source>
&amp;lt;taskdef name="wogen" classname="org.objectstyle.woproject.ant.WOGenerator"&amp;gt;
     &amp;lt;classpath refid="classpath"/&amp;gt;
&amp;lt;/taskdef&amp;gt;
&amp;lt;wogen map="src/test.eomodeld" destDir="src/java"/&amp;gt;
</source>
    </section>
</body>
</document>
